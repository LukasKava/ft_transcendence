# version: '3.8'

services:
  gateway_microservice:
    container_name: gateway_service
    build: ./app/gateway_service
    hostname: apigateway
    networks:
      - backend
      - frontend
    depends_on:
      - "game_django"
      - "userprofile_django"
    #   - usermanagement

  game_django:
    build: app/game_service/
    container_name: game_service
    command: ./script.sh
    ports:
      - "5000:5000"
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST:-game_postgres}
    depends_on:
      - "game_postgres"
    env_file:
      - .env
    restart: unless-stopped
    networks:
      - "backend"

  game_postgres:
    image: postgres:16
    container_name: game_postgres
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-karolina1}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-123}
    ports:
      - "5432:5432"
    networks:
      - "backend"
    restart: unless-stopped

  userprofile_django:
    build: app/user_profile_service/
    container_name: userprofile_service
    command: ./script_user.sh
    ports:
      - "7000:7000"
    environment:
      POSTGRES_USERPROFILE_DB: ${POSTGRES_USERPROFILE_DB:-database_user_name}
      POSTGRES_USERPROFILE_PORT: ${POSTGRES_USERPROFILE_PORT:-5434}
      POSTGRES_USERPROFILE_HOST: ${POSTGRES_USERPROFILE_HOST:-userprofile_postgres}
    depends_on:
      - "userprofile_postgres"
    networks:
      - "backend"
    env_file:
      - .env
    restart: unless-stopped

  userprofile_postgres:
    image: postgres:16
    container_name: userprofile_postgres
    env_file:
      - .env
    environment:
      POSTGRES_USERPROFILE_DB: ${POSTGRES_USERPROFILE_DB:-database_user_name}
      POSTGRES_USERPROFILE_USER: ${POSTGRES_USERPROFILE_USER:-karolina3}
      POSTGRES_USERPROFILE_PASSWORD: ${POSTGRES_USERPROFILE_PASSWORD:-123}
    ports:
      - "5434:5434"
    networks:
      - "backend"
    restart: unless-stopped
  
  frontend:
    build: app/frontend_service/
    container_name: frontend_service
    ports:
      - "8081:80"
    networks:
      - "frontend"
    env_file:
      - .env

networks:
  frontend:
    name: frontend
    driver: bridge
  backend:
    name: backend
    driver: bridge


